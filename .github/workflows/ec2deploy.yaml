name: Build on DockerHub and Deploy on AWS
on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN:  ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_PRIVATE_KEY:  ${{ secrets.AWS_PRIVATE_KEY }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push docker image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          dockerfile: ./Dockerfile
          tags: vazidcovlant/dockerdemo:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Set permission for private key
        run: |
          echo "${{ env.AWS.PRIVATE.KEY }}" > key.pem
          chmod 600 key.pem
      - name: Pull Docker Image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-18-233-157-140.compute-1.amazonaws.com 'sudo docker pull vazidcovlant/dockerdemo:latest'
      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-18-233-157-140.compute-1.amazonaws.com 'sudo docker stop dockerdemo || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-18-233-157-140.compute-1.amazonaws.com 'sudo docker rm dockerdemo || true'
      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@ec2-18-233-157-140.compute-1.amazonaws.com 'sudo docker run -d --name dockerdemo -p 80:8080 vazidcovlant/dockerdemo:latest'





  